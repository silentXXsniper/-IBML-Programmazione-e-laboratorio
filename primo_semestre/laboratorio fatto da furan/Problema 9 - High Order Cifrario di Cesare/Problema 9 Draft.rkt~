#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 8.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 34 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mrl"
 #"ib\"))\x00"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 79
(1
 #"((lib \"srcloc-snip.rkt\" \"framework\") (lib \"wxme-srcloc-snip.rkt"
 #"\" \"framework\"))\x00"
) 1 0 93
(2
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-snip"
 #"class-wxme.ss\" \"framework\"))\x00"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(3
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsis"
 #"-snip-wxme.rkt\" \"drracket\" \"private\"))\x00"
) 2 0 88
(4
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.rk"
 #"t\" \"drracket\" \"private\"))\x00"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 60 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 0 0 0 -1 -1 0
42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 50 205 50 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 152 251 152 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 152 251 152 0 0 0
-1 -1           0 395 0 4 3 85
(5
 #";; The first three lines of this file were inserted by DrRacket. They"
 #" record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(6
 #";; about the language level of this file in a form that our tools can"
 #" easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 283
(7
 #"#reader(lib \"htdp-intermediate-lambda-reader.ss\" \"lang\")((modname"
 #" |Problema 9 Draft|) (read-case-sensitive #t) (teachpacks ((lib \"dra"
 #"wings.ss\" \"installed-teachpacks\"))) (htdp-settings #(#t constructo"
 #"r repeating-decimal #f #t none #f ((lib \"drawings.ss\" \"installed-t"
 #"eachpacks\")) #f)))"
) 0 0 4 29 1 #"\n"
0 0 17 3 29 #"; Problema 9: cifrario latino"
0 0 25 29 1 #"\n"
0 0 17 3 12 #"; Reference:"
0 0 25 29 1 #"\n"
0 0 17 3 41 #"; A B C D E F G H I L M N O P Q R S T V X"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 22 #"long-alphabeto-inglese"
0 0 25 3 1 #" "
0 0 22 3 2 #"26"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 17 #"; Testa alphabeto"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"ascii-A"
0 0 25 3 2 #" ("
0 0 14 3 13 #"char->integer"
0 0 25 3 1 #" "
0 0 22 3 3 #"#\\A"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 16 #"; Coda alphabeto"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"ascii-X"
0 0 25 3 2 #" ("
0 0 14 3 13 #"char->integer"
0 0 25 3 1 #" "
0 0 22 3 3 #"#\\X"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 26 #"; Black-listed characters:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"ascii-J"
0 0 25 3 2 #" ("
0 0 14 3 13 #"char->integer"
0 0 25 3 1 #" "
0 0 22 3 3 #"#\\J"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"ascii-K"
0 0 25 3 2 #" ("
0 0 14 3 13 #"char->integer"
0 0 25 3 1 #" "
0 0 22 3 3 #"#\\K"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"ascii-U"
0 0 25 3 2 #" ("
0 0 14 3 13 #"char->integer"
0 0 25 3 1 #" "
0 0 22 3 3 #"#\\U"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"ascii-W"
0 0 25 3 2 #" ("
0 0 14 3 13 #"char->integer"
0 0 25 3 1 #" "
0 0 22 3 3 #"#\\W"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"ascii-Z"
0 0 25 3 2 #" ("
0 0 14 3 13 #"char->integer"
0 0 25 3 1 #" "
0 0 22 3 3 #"#\\Z"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"ascii-Y"
0 0 25 3 2 #" ("
0 0 14 3 13 #"char->integer"
0 0 25 3 1 #" "
0 0 22 3 3 #"#\\Y"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 53 #"; Data una chiave (factore di rotatione) compresa tra"
0 0 25 29 1 #"\n"
0 0 17 3 53 #"; 0 e 19, creare una procedura con valori procedurali"
0 0 25 29 1 #"\n"
0 0 17 3 56 #"; che restituisca la funzione di crittazione (il cipher)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 21 #"; Cifratore caratteri"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"cipher"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 7 #"factore"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 10 #"charactere"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 1 #"k"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 13 #"char->integer"
0 0 25 3 1 #" "
0 0 14 3 10 #"charactere"
0 0 25 3 2 #") "
0 0 14 3 7 #"factore"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 13 #"integer->char"
0 0 25 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                         [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"k"
0 0 25 3 1 #" "
0 0 14 3 7 #"ascii-Y"
0 0 25 3 2 #")("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"k"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 14 3 22 #"long-alphabeto-inglese"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                         [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"k"
0 0 25 3 1 #" "
0 0 14 3 7 #"ascii-Z"
0 0 25 3 2 #")("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"k"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 22 #"long-alphabeto-inglese"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                         [("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 1 #"k"
0 0 25 3 1 #" "
0 0 14 3 7 #"ascii-X"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"k"
0 0 25 3 1 #" "
0 0 14 3 22 #"long-alphabeto-inglese"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                         [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"k"
0 0 25 3 1 #" "
0 0 14 3 7 #"ascii-J"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"k"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #")] "
0 0 17 3 9 #"; (+ k 2)"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                         [("
0 0 14 3 2 #"or"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"k"
0 0 25 3 1 #" "
0 0 14 3 7 #"ascii-K"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"k"
0 0 25 3 1 #" "
0 0 14 3 7 #"ascii-K"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"k"
0 0 25 3 1 #" "
0 0 14 3 7 #"ascii-U"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"k"
0 0 25 3 1 #" "
0 0 14 3 7 #"ascii-W"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"k"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #")] "
0 0 17 3 9 #"; (+ k 1)"
0 0 25 29 1 #"\n"
0 0 25 3 26 #"                         ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 14 3 1 #"k"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                           ))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        )"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"      )))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 26 #"; Character cipher mark II"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 14 #"cipher-mark-II"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 15 #"rotation-factor"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #" "
0 0 14 3 10 #"dictionary"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 9 #"character"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 6 #"char=?"
0 0 25 3 1 #" "
0 0 14 3 9 #"character"
0 0 25 3 2 #" ("
0 0 14 3 10 #"string-ref"
0 0 25 3 1 #" "
0 0 14 3 10 #"dictionary"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #">"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 15 #"rotation-factor"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 2 #") "
0 0 14 3 10 #"dictionary"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 10 #"string-ref"
0 0 25 3 1 #" "
0 0 14 3 10 #"dictionary"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 15 #"rotation-factor"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 2 #") "
0 0 14 3 10 #"dictionary"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"              ()"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"              ())"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 14 #"cipher-mark-II"
0 0 25 3 1 #" "
0 0 14 3 15 #"rotation-factor"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 5 #"index"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 10 #"dictionary"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"      )))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 21 #"; Cifratore integrale"
0 0 25 29 1 #"\n"
0 11         339 22 2 #"(\0"
2 #")\0"
10 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 2 #"de"
7 #"wxtext\0"
3 1 #"f"
7 #"wxtext\0"
3 3 #"ine"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 16 #"illusio-factorem"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 2 #"  "
93 2 2 #"(\0"
2 #")\0"
56 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 1 #"l"
7 #"wxtext\0"
3 2 #"am"
7 #"wxtext\0"
3 1 #"b"
7 #"wxtext\0"
3 2 #"da"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 7 #"nuntius"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"regula"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    ("
7 #"wxtext\0"
3 2 #"if"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"="
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 13 #"string-length"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 7 #"nuntius"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 1 #"0"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 8 #"        "
7 #"wxtext\0"
3 2 #"\"\""
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        ("
7 #"wxtext\0"
3 13 #"string-append"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"         ("
7 #"wxtext\0"
3 6 #"string"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"regula"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"string-ref"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 7 #"nuntius"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"0"
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"         ("
7 #"wxtext\0"
3 16 #"illusio-factorem"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 9 #"substring"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 7 #"nuntius"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"1"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 6 #"regula"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 9 #"        )"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 5 #"    )"
7 #"wxtext\0"
3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 6 #"; TEST"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 23 #"antiquum-codicem-Caesar"
0 0 25 3 2 #" ("
0 0 14 3 6 #"cipher"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 16 #"illusio-factorem"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 19 3 31 #"\"ALEAIACTAESTIVLIVSCAESARDIXIT\""
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 14 3 23 #"antiquum-codicem-Caesar"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 33 #"; \"DOHDLDFCDHVCLEOLEVFDHVDAGLGLC\""
0 0 25 29 1 #"\n"
0 0 17 3 33 #"; \"DOHDLDFXDHVXLEOLEVFDHVDVGLGLX\""
0 0 25 29 1 #"\n"
0 0 17 3 46 #"; Expected: DOHD NDFAD HXA NBONBX FDHXDV GNCNA"
0 0 25 29 1 #"\n"
0           0
