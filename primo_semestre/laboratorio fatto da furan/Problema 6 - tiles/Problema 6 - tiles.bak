;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-intermediate-lambda-reader.ss" "lang")((modname |Problema 6 - tiles|) (read-case-sensitive #t) (teachpacks ((lib "drawings.ss" "installed-teachpacks"))) (htdp-settings #(#t constructor repeating-decimal #f #t none #f ((lib "drawings.ss" "installed-teachpacks")) #f)))
; RISOLTO

;; L-Tessellation Problem
;; Claudio Mirolo, 6/11/2014

;; Per eseguire questo codice e' necessario
;; utilizzare il TeachPack "drawings.ss"


;; L-Tessellation Problem
;;
;; Questo problema si basa su tasselli a forma di L, con
;; i lati lunghi di 2 unita' e quelli corti di 1 unita'.
;; La forma di ogni tassello, nella configurazione di
;; riferimento, e' associata al nome
;;
;;   L-tile
;;
;; Hai a disposizione tanti tasselli quanti ne servono e li
;; puoi spostare e combinare fra loro con le procedure:
;;
;;   (shift-down <figura> <passi>)
;;
;;   (shift-right <figura> <passi>)
;;
;;   (quarter-turn-right <figura>)
;;
;;   (quarter-turn-left <figura>)
;;
;;   (half-turn <figura>)
;;
;;   (glue-tiles <figura> <figura>)
;;
;; L'argomento <figura> e' nel caso piu' semplice un tassello e in
;; generale una figura ottenuta spostando, ruotando e combinando
;; diversi tasselli. L'argomento <passi> rappresenta il numero di
;; unita' di spostamento in basso o a destra.
;;
;; Le operazioni consentono, rispettivamente, di spostae in basso,
;; spostare a destra, ruotare di 90 gradi in senso orario, ruotare
;; di 90 gradi in senso antiorario, capovolgere e combinare
;; insieme due figure: si capisce facilmente provando, per esempio:
;;
;;   (glue-tiles L-tile (shift-right (half-turn L-tile) 1))
;;
;; Immagina che i tasselli rappresntino piastrelle con le quali
;; si deve coprire (o piastrellare) il pavimento di una stanza,
;; ma senza tagliare (o, peggio, sovrapporre) piastrelle.
;; Il problema e' risolubile se il pavimento della stanza e'
;; un quadrato di lato n unita', dove n e' una potenza di due,
;; da cui e' stata tolta una colonna quadrata di lato 1 unita'
;; in corrispondenza al vertice in basso a destra.
;; L'obiettivo e' di definire un'opportuna procedura in Scheme
;; "per piastrellare il pavimento" (naturalmente, se la forma e
;; le dimensioni sono consistenti con le specifiche date).


;; Traslazione unitaria da utilizzare per la tassellazione
;; (lato piu' corto del tassello a forma di L)

(set-tessellation-shift-step!)


; prendendo a modello il caso base vero e proprio (e non il per me caso limite L-tel 1)
; ho creato questa procedura che prende il generico tile passato, che può essere di qualsiasi tipo
; e grazie al parametro len, fa tutte le traslazioni e le rotazioni proporzionate che portano
; alla creazione del tile desiderato.
(define create-tile
  (lambda (base-tile len)
    (glue-tiles
     (glue-tiles
      (glue-tiles
       (shift-down (quarter-turn-left base-tile) len) base-tile
       ) (shift-down (shift-right base-tile (/ len 2)) (/ len 2))
         ) (shift-right (quarter-turn-right base-tile) len)
           )
    ))

; Main procedure
(define L-tel
  (lambda (len)
    ; caso limite: 1
    (if (= len 1)
        L-tile
        ; se len > 2, siccome comunque sono potenze di 2
        (if (> len 2)
            ; la ricorsione è basata tutta sul fatto che L-tel di len (con len > 2)
            ; sia uguale a create-tile con len/2
            ; esempio: L-tel(8) è dato da create-tile(L-tel(4))
            ; e per questo la chiamata ricorsiva si basa sul dimezzamento di len.
            ; Si arriva sempre al caso base in cui il tile passato è L-tile, e poi da lì
            ; la figura creata inizialmente viene ricorsivamente usata come blocco base
            ; per la creazione della figura subito superiore fino a quella finale.
            (create-tile (L-tel (/ len 2)) len)
            (create-tile L-tile len)
            )
        )
    ))

; TEST: ESITO POSTIIVO
(L-tel 1)
(L-tel 2)
(L-tel 4)
(L-tel 16)