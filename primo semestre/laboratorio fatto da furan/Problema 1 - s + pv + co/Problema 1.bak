;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-intermediate-lambda-reader.ss" "lang")((modname |Problema 1|) (read-case-sensitive #t) (teachpacks ((lib "drawings.ss" "installed-teachpacks"))) (htdp-settings #(#t constructor repeating-decimal #f #t none #f ((lib "drawings.ss" "installed-teachpacks")) #f)))

; Problema 1 - 26/29 Ottobre 2020
;       Descrizione
;     La procedura frase si applica a tre argomenti di tipo stringa che svolgono rispettivamente i ruoli di soggetto,
; predicato verbale e complemento oggetto. Soggetto e complemento oggetto sono rappresentati da sostantivi della
; lingua italiana; il predicato verbale dall’infinito di un verbo. La procedura restituisce una stringa che rappresenta una
; frase compiuta in italiano, dove i sostantivi sono preceduti da articoli determinativi appropriati e il verbo è declinato
; correttamente, come negli esempi riportati sotto. Per semplicità, considera solo sostantivi maschili che terminano con la
; lettera “o” al singolare, con la “i” al plurale e che possano essere preceduti dagli articoli “il” o “i”; considera solo
; sostantivi femminili che terminano con la lettera “a” al singolare, con la “e” al plurale e che possano essere preceduti
; dagli articoli “la” o “le”; considera inoltre solo verbi che, declinati alla terza persona dell’indicativo presente, hanno un
; comportamento regolare (-are → -a/-ano, -ere → -e/-ono, -ire → -e/-ono).
; Definisci la procedura frase in Scheme. Cerca di organizzare il programma introducendo opportune procedure di
; supporto che risolvono sottoproblemi specifici semplici, privilegiando la chiarezza (leggibilità) del codice.

;; Procedura per gestire i sostantivi (soggetto e complemento oggetto)
(define qualeArticolo?  ; val: stringa
  (lambda (sostantivo)  ; arg: stringa
    (let ((ultimaLettera (string-ref sostantivo (- (string-length sostantivo) 1))))
      (cond ((char=? ultimaLettera #\a) (string-append "la " sostantivo))
            ((char=? ultimaLettera #\e) (string-append "le " sostantivo))
            ((char=? ultimaLettera #\i) (string-append "i " sostantivo))
            ((char=? ultimaLettera #\o) (string-append "il " sostantivo))
            )
      )))

;; Procedura che dice se un sostantivo è plurale o singolare (singolare = y)
(define singolare?     ; val: char
  (lambda (sostantivo) ; arg: stringa
    (let ((ultimaLettera (string-ref sostantivo (- (string-length sostantivo) 1))))
      (cond ((or (char=? ultimaLettera #\a) (char=? ultimaLettera #\o)) #t)
            ((or (char=? ultimaLettera #\e) (char=? ultimaLettera #\i)) #f)
            )
      )
    ))

;; Procedura per gestire predicati verbali
(define qualeConiugazione?     ; val: stringa
  (lambda (verbo sostantivo)   ; arg: stringa stringa
    (let ((coniugazione (substring verbo (- (string-length verbo) 3) (string-length verbo))))
      (let ((radice (substring verbo 0 (- (string-length verbo) 3))))
        (cond ((and (string=? coniugazione "are" ) (singolare? sostantivo)) (string-append " " radice "a "))
              ((and (string=? coniugazione "ere" ) (singolare? sostantivo)) (string-append " " radice "e "))
              ((and (string=? coniugazione "ire" ) (singolare? sostantivo)) (string-append " " radice "a "))
                 
              ((and (string=? coniugazione "are" ) (not (singolare? sostantivo))) (string-append " " radice "ano "))
              ((and (string=? coniugazione "ere" ) (not (singolare? sostantivo))) (string-append " " radice "ono "))
              ((and (string=? coniugazione "ire" ) (not (singolare? sostantivo))) (string-append " " radice "ono "))
              )
        ))
    ))

;; Procedura finale
(define frase
  (lambda (soggetto predicatoVerbale complementoOggetto)
    (string-append (qualeArticolo? soggetto) (qualeConiugazione? predicatoVerbale soggetto) (qualeArticolo? complementoOggetto))
    ))

;; Tester
(frase "gatto" "cacciare" "topi")
(frase "mucca" "mangiare" "fieno")
(frase "sorelle" "leggere" "novella")
(frase "bambini" "amare" "favole")
(frase "musicisti" "suonare" "pianoforti")
(frase "cuoco" "friggere" "patate")
(frase "camerieri" "servire" "clienti")
(frase "mamma" "chiamare" "figlie")